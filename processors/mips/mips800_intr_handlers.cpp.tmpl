/******************************************************
 * Interrupt Handlers implementation file.            *
 * This file is automatically generated by ArchC      *
 * WITHOUT WARRANTY OF ANY KIND, either express       *
 * or implied.                                        *
 * For more information on ArchC, please visit:       *
 * http://www.archc.org                               *
 *                                                    *
 * The ArchC Team                                     *
 * Computer Systems Laboratory (LSC)                  *
 * IC-UNICAMP                                         *
 * http://www.lsc.ic.unicamp.br                       *
 ******************************************************/
 

#include "ac_intr_handler.H"
#include "mips800_intr_handlers.H"

#include "mips800_ih_bhv_macros.H"

//!'using namespace' statement to allow access to all mips800-specific datatypes
using namespace mips800_parms;

// Interrupt handler behavior for interrupt port intr_port.
void ac_behavior(intr_port, value, addr) {
   if (value == INTR_PROC_OFF) { 
       //printf("\nINSTR_HANDLER: Processor %d (mips800) is sleeping." , id.read()); 
       intr_reg.write(value); 
   } 
   else if (value == INTR_PROC_ON) { 
       //printf("\nINSTR_HANDLER: Processor %d (mips800) is waking up." , id.read()); 
       intr_reg.write(value); 
       wake->notify(sc_core::SC_ZERO_TIME); 

       /* ac_release update a signal to re-start the processor simulator   */ 
       /* See mips800_isa::ac_behavior (instruction) (mips800_isa.cpp)               */ 
       //ac_release();	
   }
   else { 
       printf("\nINSTR_HANDLER: Processor %d (mips800) unrecognized interuption code %d. Ignoring.", id.read(), value); 
   }
}