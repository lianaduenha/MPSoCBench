include platforms/$(PLATFORM)/defs.arp

ROOT=$(PWD)

export LIB_DIR:= `pkg-config --libs systemc archc` \
  $(foreach ip, $(IP), -L $(ROOT)/ip/$(ip)) \
  $(foreach is, $(IS), -L $(ROOT)/is/$(is)) \
  $(foreach wrapper, $(WRAPPER), -L $(ROOT)/wrappers/$(wrapper)) \
  $(foreach processor, $(PROCESSOR_BASE), -L $(ROOT)/processors/$(processor))

export INC_DIR:= `pkg-config --cflags systemc archc` \
  $(foreach ip, $(IP), -I $(ROOT)/ip/$(ip)) \
  $(foreach is, $(IS), -I $(ROOT)/is/$(is)) \
  $(foreach wrapper, $(WRAPPER), -I $(ROOT)/wrappers/$(wrapper)) \
  $(foreach processor, $(PROCESSOR), -I $(ROOT)/processors/$(processor))

export LIBS:= \
  $(foreach processor, $(PROCESSOR_BASE), -l$(processor))\
  $(foreach ip, $(IP), -l$(ip)) \
  $(foreach is, $(IS), -l$(is))\
  $(foreach wrapper, $(WRAPPER), -l$(wrapper)) \
  -lsystemc -larchc -lm -lpowersc

export CFLAGS:=-ggdb2 -O2 -pthread -D$(SOFTWARE) -std=c++11

export CC:=g++

#------------------------------------------------------
.SILENT:

#------------------------------------------------------
all:
	cd $(ROOT)
	for processor in $(PROCESSOR); do \
            echo Making Processor $$processor ...;\
            cd processors/$$processor ; \
            if [ ! -a Makefile ]; then \
                $(ARCHC_PREFIX)/bin/acsim $${processor}_$(TRANSPORT).ac $(ACSIM_FLAGS) ; \
            fi; \
            $(MAKE) lib; \
            cd $(ROOT); done
	for ip in $(IP); do echo Making IP $$ip ...; \
      cd ip/$$ip; $(MAKE) lib; cd $(ROOT); done
	for is in $(IS); do echo Making IS $$is ...; \
            cd is/$$is; $(MAKE) lib; cd $(ROOT); done
	for wrapper in $(WRAPPER); do \
            echo Making Wrapper $$wrapper ...; \
            cd wrappers/$$wrapper; $(MAKE) lib; \
            cd $(ROOT); done
	for sw in $(SW); do \
            echo Making Software $$sw ...; cd sw/$$sw; \
            $(MAKE); cd $(ROOT); done
	for sw in $(SW) ; do \
            cp sw/$$sw/*.x platforms/$(PLATFORM) ; done
	echo Making Platform $(PLATFORM)
	cd platforms/$(PLATFORM); $(MAKE)


#------------------------------------------------------
het:
	cd $(ROOT)
	for processor in $(PROCESSOR); do \
            echo Making Processor $$processor ...;\
            cd processors/$(PROCESSOR_BASE) ; \
            if [ ! -a Makefile ]; then \
                $(ARCHC_PREFIX)/bin/acsim $${processor}_$(TRANSPORT).ac $(ACSIM_FLAGS) ; \
            fi; \
            cd $(ROOT); done
	cd $(ROOT)/processors/$(PROCESSOR_BASE) && make -f Makefile_1;	 
	cd $(ROOT);
	for ip in $(IP); do echo Making IP $$ip ...; \
      cd ip/$$ip; $(MAKE) lib; cd $(ROOT); done
	for is in $(IS); do echo Making IS $$is ...; \
            cd is/$$is; $(MAKE) lib; cd $(ROOT); done
	for wrapper in $(WRAPPER); do \
            echo Making Wrapper $$wrapper ...; \
            cd wrappers/$$wrapper; $(MAKE) lib; \
            cd $(ROOT); done
	for sw in $(SW); do \
            echo Making Software $$sw ...; cd sw/$$sw; \
            $(MAKE); cd $(ROOT); done
	for sw in $(SW) ; do \
            cp sw/$$sw/*.x platforms/$(PLATFORM) ; done
	echo Making Platform $(PLATFORM)
	cd platforms/$(PLATFORM); $(MAKE);

	echo Creating rundir for $(RUNDIRNAME) ...
	cd $(ROOT)/rundir ; mkdir -p $(RUNDIRNAME);
	cd $(ROOT) ; $(MAKE) copy clean;


#------------------------------------------------------
het2:
	cd $(ROOT)
	for processor in $(PROCESSOR); do \
            echo Making Processor $$processor ...;\
            cd processors/$(FOLDER) ; \
            if [ ! -a Makefile ]; then \
                $(ARCHC_PREFIX)/bin/acsim $${processor}.ac $(ACSIM_FLAGS) ; \
            fi; \
            cd $(ROOT); done
	cd $(ROOT)/processors/$(FOLDER) && make -f Makefile_1;   
	cd $(ROOT);
	for ip in $(IP); do echo Making IP $$ip ...; \
      cd ip/$$ip; $(MAKE) lib; cd $(ROOT); done
	for is in $(IS); do echo Making IS $$is ...; \
            cd is/$$is; $(MAKE) lib; cd $(ROOT); done
	for wrapper in $(WRAPPER); do \
            echo Making Wrapper $$wrapper ...; \
            cd wrappers/$$wrapper; $(MAKE) lib; \
            cd $(ROOT); done
	for sw in $(SW); do \
            echo Making Software $$sw ...; cd sw/$$sw; \
            $(MAKE); cd $(ROOT); done
	for sw in $(SW) ; do \
            cp sw/$$sw/*.x platforms/$(PLATFORM) ; done
	echo Making Platform $(PLATFORM)
	cd platforms/temp.$(PLATFORM); $(MAKE);

	echo Creating rundir for $(RUNDIRNAME) ...
	cd $(ROOT)/rundir ; mkdir -p $(RUNDIRNAME);
	cd $(ROOT) ; $(MAKE) copy clean;
	
#------------------------------------------------------
clean:
	cd $(ROOT)
	for ip in $(IP) ; do cd ip/$$ip ; \
            $(MAKE) clean ; cd $(ROOT); done
	for is in $(IS) ; do cd is/$$is ; \
            $(MAKE) clean ; cd $(ROOT); done
	for wrapper in $(WRAPPER); do \
            cd wrappers/$$wrapper; $(MAKE) clean; \
            cd $(ROOT); done
	for processor in $(PROCESSOR) ; do \
            cd processors/$(PROCESSOR_BASE) ; \
            if [ -a Makefile ]; then \
                $(MAKE) clean; \
            fi; \
            cd $(ROOT); done
	for sw in $(SW) ; do cd sw/$$sw ; \
            $(MAKE) clean ; cd $(ROOT); done
	for sw in $(SW) ; do \
            rm -f platforms/$(PLATFORM)/*.x; cd $(ROOT); done
	cd platforms/$(PLATFORM); $(MAKE) clean

#------------------------------------------------------
distclean:
	cd $(ROOT)
	for ip in $(IP) ; do cd ip/$$ip ; \
            $(MAKE) distclean ; cd $(ROOT); done
	for is in $(IS) ; do cd is/$$is ; \
            $(MAKE) distclean ; cd $(ROOT); done
	for wrapper in $(WRAPPER); do \
            cd wrappers/$$wrapper; $(MAKE) distclean; \
            cd $(ROOT); done
	for processor in $(PROCESSOR) ; do \
            cd processors/$(PROCESSOR_BASE) ; \
            if [ -a Makefile ]; then \
                $(MAKE) distclean; \
            fi; \
            cd $(ROOT); done
	for sw in $(SW) ; do cd sw/$$sw ; \
            $(MAKE) distclean ; cd $(ROOT); done
	for sw in $(SW) ; do \
            rm -f platforms/$(PLATFORM)/*.x; cd $(ROOT); done
	cd platforms/$(PLATFORM); $(MAKE) distclean
	
#------------------------------------------------------
copy:
	cd $(ROOT)
	cd platforms/$(PLATFORM); $(MAKE) copy;
	cd $(ROOT)
	cd is/tlm_noc_at; $(MAKE) copy;
	for sw in $(SW) ; do cd sw/$$sw ; \
        $(MAKE) copy; done
#------------------------------------------------------
run_het: het
	cd $(ROOT)
	cd rundir/$(RUNDIRNAME); ./$(PLATFORM).x $(SOFTWARE).$(PROCESSOR_BASE).x $(NUMPROCESSORS) ; make -f Makefile.check check

#------------------------------------------------------
run: all
	cd $(ROOT)
	cd platforms/$(PLATFORM); $(MAKE) run

